'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _NodeGroup = require('../NodeGroup');

var _NodeGroup2 = _interopRequireDefault(_NodeGroup);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//  weak
/* eslint max-len: "off" */

var tickKeyAccessor = function tickKeyAccessor(d) {
  return 'tick-' + d.val;
};

var TickGroup = function (_Component) {
  (0, _inherits3.default)(TickGroup, _Component);

  function TickGroup() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, TickGroup);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = TickGroup.__proto__ || (0, _getPrototypeOf2.default)(TickGroup)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      ticks: []
    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  }

  (0, _createClass3.default)(TickGroup, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _props = this.props,
          scale = _props.scale,
          tickCount = _props.tickCount;

      var ticks = scale.ticks ? scale.ticks(tickCount) : [];
      this.updateTicks(ticks.map(function (d) {
        return { val: d };
      }));
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(next) {
      if (next.scale !== this.props.scale) {
        var _scale = next.scale,
            _tickCount = next.tickCount;

        var ticks = _scale.ticks ? _scale.ticks(_tickCount) : [];
        this.updateTicks(ticks.map(function (d) {
          return { val: d };
        }));
      }
    }
  }, {
    key: 'updateTicks',
    value: function updateTicks(ticks) {
      this.setState(function () {
        return { ticks: ticks };
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _props2 = this.props,
          start = _props2.start,
          enter = _props2.enter,
          update = _props2.update,
          leave = _props2.leave,
          children = _props2.children;


      return _react2.default.createElement(
        _NodeGroup2.default,
        {
          data: this.state.ticks,
          keyAccessor: tickKeyAccessor,
          start: start,
          enter: enter,
          update: update,
          leave: leave
        },
        children
      );
    }
  }]);
  return TickGroup;
}(_react.Component);

TickGroup.defaultProps = {
  enter: function enter() {},
  update: function update() {},
  leave: function leave() {}
};
exports.default = TickGroup;